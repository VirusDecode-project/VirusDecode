name: CI/CD Docker Compose Deploy

on:
  push:
    branches:
      - deploy  # deploy 브랜치에 푸시될 때 트리거

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Modify dependencies for deployment
        # SQLite 의존성을 MySQL로 대체
        run: |
          sed -i "s|runtimeOnly 'org.xerial:sqlite-jdbc:3.43.0.0'|runtimeOnly 'mysql:mysql-connector-java:8.0.33'|" backend/build.gradle

      - name: Update WebConfig.java for allowedOrigins
        # WebConfig.java에서 allowedOrigins 수정
        run: |
          sed -i "s|\"http://localhost:3000\"|\"http://localhost:3000\",\n                                \"https://virusdecode.com\",\n                                \"https://www.virusdecode.com\"|" backend/src/main/java/VirusDecode/backend/config/WebConfig.java

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker images with Docker Compose
        run: docker compose -f docker-compose.yml build

      - name: Tag images with Docker Hub username and push
        run: |
          docker tag virusdecode-backend:latest ${{ secrets.DOCKER_USERNAME }}/virusdecode-backend:latest
          docker tag virusdecode-frontend:latest ${{ secrets.DOCKER_USERNAME }}/virusdecode-frontend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/virusdecode-backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/virusdecode-frontend:latest
          
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: SSH to EC2 and deploy with Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker compose down
            docker rmi ${{ secrets.DOCKER_USERNAME }}/virusdecode-backend:latest
            docker rmi ${{ secrets.DOCKER_USERNAME }}/virusdecode-frontend:latest
            docker compose pull
            docker compose up -d
